package com.shibu;

class Info{
    int size;
    int min;
    int max;
    int ans;
    boolean isBST;
    Info(){};
    Info(int size, int min, int max, int ans, boolean isBST){
        this.size = size;
        this.min = min;
        this.max = max;
        this.ans = ans;
        this.isBST = isBST;
    }
}
public class LargestBST {
    public static void main(String[] args) {
        Node root = new Node(15);
        root.left = new Node(20);
        root.right = new Node(30);
        root.left.left = new Node(5);
        System.out.println(largestBST(root).ans);
    }
    static Info largestBST(Node root){
        if(root==null){
            return new Info(0, Integer.MAX_VALUE, Integer.MIN_VALUE, 0, true);
        }
        if(root.left==null && root.right==null){
            return new Info(1, root.data, root.data, 1, true);
        }
        Info leftInfo = largestBST(root.left);
        Info rightInfo = largestBST(root.right);

        Info curr = new Info();
        curr.size = 1 + leftInfo.size + rightInfo.size;

        if(leftInfo.isBST && rightInfo.isBST && leftInfo.max<root.data && rightInfo.min>root.data){
            curr.ans = curr.size;
            curr.isBST =true;
            return curr;
        }
        curr.isBST = false;
        curr.size = Math.max(leftInfo.size, rightInfo.size);
        curr.ans = curr.size;
        return curr;
    }

}
