package com.shibu;
import java.util.*;

public class LongestSubstringWithKUniqueCharacters {
    public int longestSubstring(String s, int k)
    {
        int maxLen = Integer.MIN_VALUE;
        int i = 0, j = 0;
        if(s.length()==0 || k==0)
        {
            return 0;
        }
        int n = s.length();
        Map<Character,Integer> mp = new HashMap<>();

        while(j<n)
        {
            if(mp.size()<=k)
            {
                if(!mp.containsKey(s.charAt(j)))
                {
                    mp.put(s.charAt(j),1);
                }
                else
                {
                    mp.put(s.charAt(j), mp.get(s.charAt(j)) + 1);
                }
                if(mp.size()==k)
                {
                    maxLen = Math.max(maxLen, (j - i + 1));
                }
            }

            else
            {
                while(mp.size()>k)
                {
                    char c = s.charAt(i);
                    mp.put(c,mp.get(c)-1);
                    if(mp.get(c)==0)
                    {
                        mp.remove(c);
                    }
                    i++;
                }
            }
            j++;
        }
        return maxLen;
    }
    public static void main(String[] args) {
        LongestSubstringWithKUniqueCharacters obj = new LongestSubstringWithKUniqueCharacters();
        System.out.println(obj.longestSubstring("aabacbebebe",3));
    }
}
