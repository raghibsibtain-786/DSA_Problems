class Solution {
    
    public boolean isPalindrome(int start,int end, String s){
        while(start<=end){
            if(s.charAt(start)==s.charAt(end)){
                start++;
                end--;
            }
            else{
                return false;
            }
        }    
        return true;
    }
    
    public boolean validPalindrome(String s) {
        
        int start = 0;
        int end = s.length()-1;
        
        while(start<=end){
            if(s.charAt(start)==s.charAt(end)){
                start++;
                end--;
            }
            else{
                return isPalindrome(start+1,end,s) || isPalindrome(start,end-1,s);                
            }
        }
        return true;
    }
}



/*class Solution {
    public boolean validPalindrome(String s) {
        
        int start = 0;
        int end = s.length()-1;
        int delete = 0;
        
        while(start<=end){
            if(s.charAt(start)==s.charAt(end)){
                start++;
                end--;
            }
            else{
                if(delete<1){
                    if(s.charAt(end-1)==s.charAt(start)){
                        end--;
                    }
                    else if(s.charAt(end)==s.charAt(start+1)){
                        start++;
                    }
                    delete++;
                }
                else{
                    return false;
                }
            }
        }
        return true;
    }
}*/
