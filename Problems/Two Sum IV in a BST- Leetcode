/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public boolean findTargetUtil(TreeNode root, int k, Set<Integer> st){
        
        if(root==null) return false;
        
        //if(root.val == k) return true;
        
        if(findTargetUtil(root.left, k, st)){
            return true;
        }
        
        if(st.contains(k- root.val)){
            
            return true;
        }
        else{
            st.add(root.val);
        }
        return findTargetUtil(root.right, k , st);
    }

    public boolean findTarget(TreeNode root, int k) {
        Set<Integer> st = new HashSet<>();
        return findTargetUtil(root, k, st);        
    }
}
