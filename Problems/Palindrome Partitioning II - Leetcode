class Solution {
    public int count = Integer.MAX_VALUE;
    public void func(String s, int index, List<String> ds){
        
        if(index==s.length()){
            if(count > ds.size()-1){
                count = ds.size()-1;   
            }
            if(ds.size() == 0){
                count = 0;
            }
            return;
        }
        
        for(int i = index; i<s.length(); i++){
            if(isPalindrome(s,index,i)){
                ds.add(s.substring(index,i+1));
                func(s,i+1,ds);
                ds.remove(ds.size()-1);     
            }   
        }
    }
    
    public boolean isPalindrome(String s , int start, int end){
        while(start<=end){
            if(s.charAt(start++) != s.charAt(end--)){
                return false;
            }
        }
        return true;
    }
    
    public int minCut(String s) {
        
        func(s,0,new ArrayList<String>());
        return count;
    }
}
