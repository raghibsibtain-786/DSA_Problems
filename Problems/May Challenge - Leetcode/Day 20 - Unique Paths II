class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid[0][0]==1 || obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1]==1)
            return 0;
        
        int rows = obstacleGrid.length;
        int cols = obstacleGrid[0].length;
        int[][] dp = new int[rows][cols];
        
        for(int row = rows-1; row>=0; row--){
            for(int col = cols-1; col>=0; col--){
                if(row==rows-1 && col==cols-1){
                    dp[row][col] = 1;
                }
                else{
                    if(obstacleGrid[row][col]==1){
                        dp[row][col] = 0;
                    }
                    else{
                        int down = (row+1)<rows? dp[row+1][col] : 0;
                        int right = (col+1)<cols? dp[row][col+1] : 0;
                        dp[row][col] = down + right;   
                    }
                }
            }
        }
        return dp[0][0];
    }
}
