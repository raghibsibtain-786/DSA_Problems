class Solution{
    public void findStrings(String s, String[] words){
        ArrayList<Integer> result = new ArrayList<>();
        Map<String,Integer> mp = new HashMap<>();

        for(String word: words){
            if(mp.containsKey(word)){
                mp.put(word,mp.get(word)+1);
            }
            else{
                mp.put(word,1);
            }
        }
        int len = words[0].length();
        for(int j = 0; j<len; j++){
            Map<String, Integer> currmp = new HashMap<>();
            int count = 0;
            int start = j;
            for(int i = j; i<s.length()-len; i+=len){
                String sub = s.substring(i,i+len);
                if(mp.containsKey(sub)){
                    if(currmp.containsKey(sub)){
                        mp.put(sub,mp.get(sub)+1);
                    }
                    else {
                        mp.put(sub, 1);
                    }
                    count++;

                    while(currmp.get(sub)>mp.get(sub)){
                        String left = s.substring(start,start+len);
                        mp.put(left,mp.get(left)-1);
                        count--;
                        start = start+len;
                    }

                    if(count== words.length){
                        result.add(start);
                        String left = s.substring(start,start+len);
                        mp.put(left,mp.get(left)-1);
                        start = start+len;
                    }
                }
                else{
                    currmp.clear();
                    start = i+len;
                    count = 0;
                }
            }
        }

    }
}
