/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public int maxDepth(Node root) {
        if(root==null)
            return 0;
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        
        int lev = 0;
        
        while(!q.isEmpty())
        {
            int s = q.size();
            while(s!=0)
            {
                Node temp = q.poll();
                
                if(temp.children.size()!=0)
                {
                    for(int i = 0; i<temp.children.size(); i++)
                    {
                        q.add(temp.children.get(i));
                    }
                }
                s--;
            }
            lev++;   
        }
        return lev;
        
    }
}
