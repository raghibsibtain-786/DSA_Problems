class Solution {
    int[][] dp;
    public boolean help(int js, int ip, String s, String p){
        if(ip<0 && js<0){
            return true;
        }
        if(ip<0 && js>=0){
            return false;
        }
        if(js<0 && ip>=0){
            for(int k = 0; k<=ip; k++){
                if(p.charAt(k)!='*'){
                    return false;
                }
            }
            return true;
        }
        if(dp[js][ip]!=-1){
            return (dp[js][ip]==1)?true:false;
        }
        
        if(s.charAt(js)==p.charAt(ip) || p.charAt(ip)=='?'){
            boolean ans = help(js-1,ip-1,s,p);
            dp[js][ip] = (ans==true)?1:0;
            return ans;
        }
        
        if(p.charAt(ip)=='*'){
            boolean ans = help(js,ip-1,s,p) || help(js-1,ip,s,p);
            dp[js][ip] = (ans==true)?1:0;
            return ans;
        }
        dp[js][ip] = 0;
        return false;
    }
    
    
    public boolean isMatch(String s, String p) {
        int js = s.length()-1;
        int ip = p.length()-1;
        dp = new int[js+1][ip+1];
        
        for(int i = 0; i<=js; i++){
            Arrays.fill(dp[i],-1);
        }
        
        return help(js,ip,s,p);        
    }
}


class Solution {    // TC-> O(nxm) SC->O(nxm)
    public boolean isMatch(String s, String p) {
        int js = s.length();
        int ip = p.length();
        boolean[][] dp = new boolean[js+1][ip+1];
        
        dp[0][0] = true; //if pattern and string are empty
        
        for(int i = 1; i<=js; i++){ //if pattern is empty but some string is left
            dp[i][0] = false;
        }
        
        for(int i = 1; i<=ip; i++){ //if string is empty and some pattern is left
            boolean flag = true;
            for(int k = 1; k<=i; k++){
                if(p.charAt(k-1)!='*'){
                    flag = false;
                    break;
                }
            }
            dp[0][i] = flag;
        }
        
        for(int i = 1; i<=js; i++){
            for(int j = 1; j<=ip; j++){
                if(s.charAt(i-1)==p.charAt(j-1) || p.charAt(j-1)=='?'){
                    dp[i][j] = dp[i-1][j-1];   
                }
                else if(p.charAt(j-1)=='*'){
                    dp[i][j] = dp[i][j-1] || dp[i-1][j];  
                }
                else{
                    dp[i][j] = false;
                }                                  
            }
        }
        
        return dp[js][ip];       
    }
}
