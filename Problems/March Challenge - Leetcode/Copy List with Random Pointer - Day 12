/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        
        Map<Node, Node> mp = new HashMap<>();
        Node temp = head;
        while(temp!=null){
            mp.put(temp,new Node(temp.val));
            temp = temp.next;
        }
        temp = head;
        while(temp!=null){
            if(mp.containsKey(temp)){
                Node current = mp.get(temp);
                current.next = (temp.next==null) ? null : mp.get(temp.next);
                current.random = (temp.random==null) ? null : mp.get(temp.random);
            }
            temp = temp.next;
        }
        temp = head;
        return mp.get(temp);
        
    }
}
