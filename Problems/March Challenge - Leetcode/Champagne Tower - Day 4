class Solution {
    public double champagneTower(int poured, int query_row, int query_glass) {
        if(poured==0)
            return 0;
        
        List<Double> list = new ArrayList<>();
        list.add(new Double(poured));
        while(query_row>0){
            
            List<Double> temp = new ArrayList<>();
            
            temp.add(Math.max(0,(list.get(0)-1)/2));
            for(int i = 1; i<list.size(); i++){                
                temp.add(Math.max(0,(list.get(i-1)-1)/2) + Math.max(0,(list.get(i)-1)/2)); //why subtract 1, because you are already 
                                                                                           //giving one to the glass in previous row and why max,because at 
                                                                                           //some point you can get a negative value as well
            }
            temp.add(temp.get(0));
            list = new ArrayList<>(temp);
            query_row--;
        }
        return (Math.min(1,list.get(query_glass)));
    }
}
