class Solution {
    public int help(int ns, int mt, String s, String t){
        if(mt<0){
            return 1;
        }
        if(ns<0){
            return 0;
        }
        
        if(s.charAt(ns)==t.charAt(mt)){
            return help(ns-1,mt-1,s,t) + help(ns-1,mt,s,t);
        }
        else{
            return help(ns-1,mt,s,t);
        }
        
    }
    public int numDistinct(String s, String t) {
        int ns = s.length()-1;
        int mt = t.length()-1;
        
        return help(ns,mt,s,t);
    }
}

public int numDistinct(String s, String t) { //TC -> O(n*m) SC-> O(n*m)
        int ns = s.length();
        int mt = t.length();
        
        int[][] dp = new int[ns+1][mt+1];
        for(int i = 0; i<=ns; i++){ //if the reference string is empty.
            dp[i][0] = 1;
        }
        for(int j = 1; j<=mt; j++){ //if the main string is empty.
            dp[0][j] = 0;
        }
        
        for(int i = 1; i<=ns; i++){
            for(int j = 1; j<=mt; j++){
                if(s.charAt(i-1)==t.charAt(j-1)){
                    dp[i][j] = dp[i-1][j-1] + dp[i-1][j];
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }                
            }
        }
        
        return dp[ns][mt];
    }
