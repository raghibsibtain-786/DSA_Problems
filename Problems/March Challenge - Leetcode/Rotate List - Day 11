/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head==null || k==0 || head.next==null){
            return head;
        }
        
        ListNode temp = head;
        int length = 0;
        
        while(temp.next!=null){
            temp = temp.next;
            length++;
        }   
        length++;
        
        k %= length;
        
        while(k>0){
            
            while(temp.next!=null){
                temp = temp.next;
            }
            temp.next = head;
            
            head = temp;
            ListNode newptr = temp;
            
            while(temp.next!=head){
                temp = temp.next;
            }
            temp.next = null;
            
            temp = newptr;
            k--;
        }
        return head;        
    }
}
