/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        int carry = 0;
        ListNode dummy = new ListNode(-100);
        ListNode tail = dummy;
        
        while(l1!=null && l2!=null){
            int sum = l1.val + l2.val + carry;
            if(sum>=10){
                sum -= 10;
                carry = 1;
            }
            else{
                carry = 0;
            }
            tail.next = new ListNode(sum);
            tail = tail.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        while(l1!=null){
            int sum = l1.val + carry;
            if(sum>=10){
                sum -= 10;
                carry = 1;
            }
            else{
                carry = 0;
            }
            tail.next = new ListNode(sum);
            tail = tail.next;
            l1 = l1.next;
        }
        while(l2!=null){
            int sum = l2.val + carry;
            
            if(sum>=10){
                sum -= 10;
                carry = 1;
            }
            else{
                carry = 0;
            }
            
            tail.next = new ListNode(sum);
            tail = tail.next;
            l2 = l2.next;
        }
        if(carry == 1){
            tail.next = new ListNode(1);
        }
        
        return dummy.next;
    }
}
